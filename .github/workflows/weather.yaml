name: Talk Weather

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: "*/2 * * * *"  # Każde 2 minuty

jobs:
  ask-weather:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Afficher l’heure d’exécution
        run: date

      - name: Get weather data
        id: get_weather
        run: |
          TEMP=$(curl -s https://wttr.in/Paris?format=3)
          echo "Weather: $TEMP"
          echo "TEMP=$TEMP" >> $GITHUB_ENV

      - name: Ask Gemini and save to TEXT.txt
        env:
          GEMINI_API: ${{ secrets.GEMINI_API }}
          TEMP: ${{ env.TEMP }}
        run: |
          echo "Sending to Gemini: Quel temps fait-il à Paris en ce moment ? $TEMP"
          RESPONSE=$(curl -s "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.0-pro:generateContent?key=$GEMINI_API" \
            -H 'Content-Type: application/json' \
            -X POST \
            -d "{
              \"contents\": [{
                \"parts\": [{
                  \"text\": \"Quel temps fait-il à Paris en ce moment ? $TEMP\"
                }]
              }]
            }")

          # Extraire le texte de la réponse (simplifié, sans jq)
          echo "$RESPONSE" > raw_response.json
          MESSAGE=$(echo "$RESPONSE" | grep -oP '"text":\s*"\K(.*?)(?=")' | head -1)

          echo "$MESSAGE" > TEXT.txt
          echo "Réponse enregistrée dans TEXT.txt"
          
      - name: Afficher TEXT.txt
        run: cat TEXT.txt
